---
import Layout from "../layouts/public.astro";
const { frontmatter } = await import("../pages/posts/nav.md");
const { navName } = frontmatter;

// const { frontmatter: postFrontmatter } = await import(
//   "../pages/posts/post-1.md"
// );
// const { navName1 } = postFrontmatter; // This now correctly gets "Some navigation data"

// Import the entire markdown file
const post = await import("../pages/posts/notes.md");

// Access all frontmatter data
const {
  title,
  pubDate,
  description,
  author,
  image,
  tags,
  database,
  programming,
} = post.frontmatter;

// Access the raw Markdown content
const { rawContent, compiledContent } = post;

const logo = "fauzan00";
const pageTitle = "about";
const domain = Astro.url.hostname;

const currentUrl = Astro.url.pathname; // Get current path
---

<Layout title={pageTitle}>
  <nav class="nav">
    <div class="nav-container">
      <a href="#" class="logo">{logo}</a>
      <button class="menu-toggle" aria-label="Toggle menu">â˜°</button>
      <ul class="nav-items">
        {
          navName.map((item) => (
            <li class="nav-item">
              <a
                href={item.route}
                class={currentUrl === item.route ? "active" : ""}
              >
                {item.name}
                {/* {item.route}
                {domain}
                {currentUrl} */}
              </a>
            </li>
          ))
        }
      </ul>
    </div>
  </nav>

  <main>
    <section>
      <h1>Notes</h1>
      <p>Discover useful tips for configuration.</p>
      <br /><br />
      <!-- <ul>
        {
          notes.map((note) => (
            <li>
              <a href={`/notes/database/${note.path}`}>{note.title}</a>
            </li>
          ))
        }
      </ul> -->

      <!-- <nav class="database-nav">
        <ul>
          {
            database.map((database) => (
              <li>
                <a
                  href={
                    database.path
                      ? `/notes/database/${database.path}/${database.path}`
                      : "/notes"
                  }
                >
                  {database.title}
                </a>
                {database.child && (
                  <ul>
                    {database.child.map((databasechild) => (
                      <li>
                        <a
                          href={`/notes/database/${databasechild.path}/${databasechild.path}`}
                        >
                          {databasechild.title}
                        </a>
                      </li>
                    ))}
                  </ul>
                )}
              </li>
            ))
          }
        </ul>
      </nav> -->

      <div class="mysql-group">
        <h2>Database</h2>
        <div class="separator"></div>

        <div class="card-container">
          <!-- Card 1 -->
          <!-- <a href="../../tailwind/project1/tips/database" class="card">
            <div class="tag">MySQL</div>
            <h3>
              Introduction to MySQL Replication (Master-Slave)
              <p class="date">Published on March 22, 2025</p>
            </h3>
            <p class="description">
              Understand the basics of MySQL databases replication
            </p>
          </a> -->

          {
            database.map((database) => (
              <div key={database.id} className="database-parent">
                <h2 className="parent-title">{database.title}</h2>

                {database.child && (
                  <div className="child-container">
                    {database.child.map((databasechild) => (
                      <a
                        href={`/notes/database/${databasechild.path}`}
                        class="card"
                      >
                        <div class="tag">
                          {databasechild.tag}
                        </div>
                        <h3>
                          {databasechild.title}
                          <p class="date">{databasechild.date}</p>
                        </h3>
                        <p class="description">
                          {databasechild.description}
                        </p>
                      </a>

                      <br />
                    ))}
                  </div>
                )}
              </div>
            ))
          }
        </div>
      </div>

      <div class="mysql-group">
        <h2>Programming</h2>
        <div class="separator"></div>

        <div class="card-container">
          {
            programming.map((programming) => (
              <div key={programming.id} className="database-parent">
                <h2 className="parent-title">{programming.title}</h2>

                {programming.child && (
                  <div className="child-container">
                    {programming.child.map((programmingchild) => (
                      <a
                        href={`/notes/programming/${programmingchild.path}`}
                        class="card"
                      >
                        <div class="tag">
                          {programmingchild.tag}
                        </div>
                        <h3>
                          {programmingchild.title}
                          <p class="date">{programmingchild.date}</p>
                        </h3>
                        <p class="description">
                          {programmingchild.description}
                        </p>
                      </a>
                    <br />

                    ))}
                  </div>
                )}
              </div>
            ))
          }
          
        </div>
      </div>
    </section>
  </main>

  <script>
    // Handle mobile menu toggle
    document
      .querySelector(".menu-toggle")
      .addEventListener("click", function () {
        document.querySelector(".nav-items").classList.toggle("active");
      });

    // Update active state on hash change
    window.addEventListener("hashchange", function () {
      const currentHash = window.location.hash;
      document.querySelectorAll(".nav-item a").forEach((link) => {
        link.classList.toggle(
          "active",
          link.getAttribute("href") === currentHash
        );
      });

      // Close mobile menu after selection
      if (window.innerWidth <= 768) {
        document.querySelector(".nav-items").classList.remove("active");
      }
    });

    // Set initial active state
    document.addEventListener("DOMContentLoaded", function () {
      const currentHash = window.location.hash || "#home";
      document
        .querySelector(`.nav-item a[href="${currentHash}"]`)
        ?.classList.add("active");
    });

    // Close menu when clicking outside (mobile)
    document.addEventListener("click", function (e) {
      const nav = document.querySelector(".nav");
      if (
        window.innerWidth <= 768 &&
        !nav.contains(e.target) &&
        !e.target.classList.contains("menu-toggle")
      ) {
        document.querySelector(".nav-items").classList.remove("active");
      }
    });
  </script>
</Layout>
